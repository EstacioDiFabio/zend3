<?php

use Zend\Mvc\Application;
?>
<h1>Um erro 404 aconteceu</h1>
<h2><?= $this->message; ?></h2>

<?php if (! empty($this->reason)) :
    switch ($this->reason) {
        case Application::ERROR_CONTROLLER_CANNOT_DISPATCH:
            $reasonMessage = 'O controlador solicitado não conseguiu despachar a solicitação.';
            break;
        case Application::ERROR_MIDDLEWARE_CANNOT_DISPATCH:
            $reasonMessage = 'O app intermediário solicitado não conseguiu despachar a solicitação.';
            break;
        case Application::ERROR_CONTROLLER_NOT_FOUND:
            $reasonMessage = 'O controlador solicitado não pôde ser mapeado para uma classe de controlador existente.';
            break;
        case Application::ERROR_CONTROLLER_INVALID:
            $reasonMessage = 'O controlador solicitado não foi despachável.';
            break;
        case Application::ERROR_ROUTER_NO_MATCH:
            $reasonMessage = 'O URL solicitado não pôde ser correspondido pelo roteamento.';
            break;
        default:
            $reasonMessage = 'Não podemos determinar neste momento porque um 404 foi gerado.';
            break;
    }
?>
<p><?= $reasonMessage ?></p>
<?php endif ?>

<?php if (! empty($this->controller)) : ?>
<dl>
    <dt>Controller:</dt>
    <dd>
        <?= $this->escapeHtml($this->controller); ?>
        <?php
        if (! empty($this->controller_class) && $this->controller_class != $this->controller) {
            printf('(resolves to %s)', $this->escapeHtml($this->controller_class));
        }
        ?>
    </dd>
</dl>
<?php endif ?>

<?php if (! empty($this->display_exceptions)) : ?>
    <?php if (isset($this->exception)
        && ($this->exception instanceof \Exception || $this->exception instanceof \Error)) : ?>
<hr/>

<h2>Informação adicional:</h2>
<h3><?= get_class($this->exception) ?></h3>
<dl>
    <dt>Arquivo:</dt>
    <dd>
        <pre><?= $this->exception->getFile() ?>:<?= $this->exception->getLine() ?></pre>
    </dd>
    <dt>Mensagem:</dt>
    <dd>
        <pre><?= $this->escapeHtml($this->exception->getMessage()) ?></pre>
    </dd>
    <dt>Pilha de rastreamento:</dt>
    <dd>
        <pre><?= $this->escapeHtml($this->exception->getTraceAsString()) ?></pre>
    </dd>
</dl>

        <?php if ($ex = $this->exception->getPrevious()) : ?>
<hr/>

<h2>Exceções anteriores:</h2>
<ul class="list-unstyled">
            <?php $icount = 0 ?>
            <?php while ($ex) : ?>
    <li>
        <h3><?= get_class($ex) ?></h3>
        <dl>
            <dt>Arquivo:</dt>
            <dd>
                <pre><?= $ex->getFile() ?>:<?= $ex->getLine() ?></pre>
            </dd>
            <dt>Mensagem:</dt>
            <dd>
                <pre><?= $this->escapeHtml($ex->getMessage()) ?></pre>
            </dd>
            <dt>Pilha de rastreamento:</dt>
            <dd>
                <pre><?= $this->escapeHtml($ex->getTraceAsString()) ?></pre>
            </dd>
        </dl>
    </li>
                <?php
                $ex = $ex->getPrevious();
                if (++$icount >= 50) {
                    echo '<li>Pode haver mais exceções, mas não temos memória suficiente para processá-las.</li>';
                    break;
                }
                ?>
            <?php endwhile ?>
</ul>
        <?php endif ?>
    <?php else : ?>
<h3>Nenhuma exceção disponível.</h3>
    <?php endif ?>
<?php endif ?>
